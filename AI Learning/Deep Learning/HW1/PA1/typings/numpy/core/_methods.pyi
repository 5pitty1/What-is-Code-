"""
This type stub file was generated by pyright.
"""

from numpy.core import umath as um
from typing import Any, Optional

"""
Array methods which are called by both the C-code for the method
and the Python code for the NumPy-namespace function

"""
umr_maximum = um.maximum.reduce
umr_minimum = um.minimum.reduce
umr_sum = um.add.reduce
umr_prod = um.multiply.reduce
umr_any = um.logical_or.reduce
umr_all = um.logical_and.reduce
def _amax(a, axis: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ..., initial=...):
    ...

def _amin(a, axis: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ..., initial=...):
    ...

def _sum(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ..., initial=...):
    ...

def _prod(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ..., initial=...):
    ...

def _any(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ...):
    ...

def _all(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ...):
    ...

def _count_reduce_items(arr, axis):
    ...

def _mean(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ...):
    ...

def _var(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., ddof=..., keepdims: bool = ...):
    ...

def _std(a, axis: Optional[Any] = ..., dtype: Optional[Any] = ..., out: Optional[Any] = ..., ddof=..., keepdims: bool = ...):
    ...

def _ptp(a, axis: Optional[Any] = ..., out: Optional[Any] = ..., keepdims: bool = ...):
    ...

